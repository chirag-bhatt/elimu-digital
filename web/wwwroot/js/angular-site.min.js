(function(){"use strict";angular.module("gobel-app",["ngMaterialDatePicker"])})(),function(){"use strict";function n(n){n.questions=[];n.question={Answers:[]};n.onAddQuestion=function(){n.question={Answers:[]};$("#addQuestionModal").modal("show")};n.onAddAnswer=function(){n.question.Text?(n.question.Answers.push(n.answer),n.answer={}):error("Type a question first before adding answer options.")};n.onExitQuestion=function(){n.question={Answers:[]};$("#addQuestionModal").modal("hide")};n.onRemoveQuestion=function(t){var i=n.questions.indexOf(t);n.questions.splice(i)};n.onSubmitQuestion=function(){n.question?n.question.Answers.length<1?error("Your question has no answers. Please add answer options"):(n.questions.push(n.question),n.question={Answers:[]}):error("No question written.")};n.onSubmitExam=function(){n.exam={};n.exam.Date=n.examDate;n.exam.StartTime=n.StartTime;n.exam.EndTime=n.EndTime;n.exam.Questions=n.questions;$.ajax({method:"POST",url:"/api/exams/create/"+$("#UnitId").val(),type:"json",data:{model:n.exam},success:function(n){console.log(n)},error:function(n){n.responseText?parseError(n.responseText):error(n.statusText)}})}}angular.module("gobel-app").controller("examCtrl",n);n.$inject=["$scope"]}();