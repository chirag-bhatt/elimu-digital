(function(){"use strict";angular.module("gobel-app",["ngMaterialDatePicker","ngSanitize"])})(),function(){"use strict";function boardsCtrl($scope){function activate(){}function fetchTopPosts(id){$scope.postsLoader=!0;$.ajax({method:"GET",url:"/api/discussionboards/"+id+"/posts",success:function(res){res instanceof Array&&$scope.$apply(function(){$scope.posts=res})},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText)}});$scope.postsLoader=!1}function fetchParticipants(id){$scope.participantsLoader=!0;$.ajax({method:"GET",url:"/api/discussionboards/"+id+"/participants",success:function(res){res instanceof Array&&$scope.$apply(function(){$scope.participants=res})},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText)}});$scope.participantsLoader=!1}function postOnBoard(id,msg){loadingBtn("postSubmitBtn",!0);$.ajax({method:"POST",url:"/api/discussionboards/"+id+"/post/"+msg,success:function(res){yay("Posted!");$scope.$apply(function(){$scope.posts.insert(0,res)})},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText)}});loadingBtn("postSubmitBtn",!1)}function pushLikePost(post){$.ajax({method:"POST",url:"/api/posts/"+post.id+"/like",success:function(res){yay("Liked!");$scope.$apply(function(){post.likes=res.likes})},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText)}})}function pushCommentOnPost(post,msg){$.ajax({method:"POST",url:"/api/posts/"+post.id+"/comment",type:"json",data:{model:{Message:msg}},success:function(res){yay("Commented!");$scope.$apply(function(){post.comments===null&&(post.comments=[]);post.comments.insert(0,res)})},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText)}})}$scope.title="boardsCtrl";$scope.participants=[];$scope.posts=[];activate();$scope.initBoard=function(id){fetchTopPosts(parseInt(id));fetchParticipants(parseInt(id))};$scope.onNewPost=function(id){postOnBoard(id,$("#CommentBox").text());$("#CommentBox").text("")};$scope.onLike=function(post){pushLikePost(post)};$scope.onNewComment=function(post){pushCommentOnPost(post,post.comment);post.comment=""}}angular.module("gobel-app").controller("boardsCtrl",boardsCtrl);boardsCtrl.$inject=["$scope"]}(),function(){"use strict";function examCtrl($scope){function postExam(){$scope.loader=!0;$.ajax({method:"POST",url:"/api/exams/create",type:"json",data:{id:$("#UnitId").val(),model:$scope.exam},success:function(){$scope.loader=!1;yay("Exam scheduled successfully! Redirecting in a few...");setTimeout(function(){window.location="/exams"},1e3)},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText);$scope.loader=!1}});$scope.loader=!1}function fetchExams(){$scope.loader=!0;$scope.exams=[];$.ajax({method:"GET",url:"/api/exams",success:function(res){res instanceof Array&&(res.length<1?info("You have no exams scheduled yet!"):$scope.$apply(function(){$scope.exams=res}))},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText)}});$scope.loader=!1}function fetchExamDetails(id){$scope.detailsLoader=!0;$.ajax({method:"GET",url:"/api/exams/"+id,success:function(res){console.log(res);$scope.$apply(function(){$scope.selectedExam=res});onDetailsSuccess()},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText)}});$scope.detailsLoader=!1}function onDetailsSuccess(){$(".accordion-section-title").click(function(e){var currentAttrValue=$(this).attr("href");$(e.target).is(".active")?(close_accordion_section(),e.target.children[1].firstElementChild.className="fa fa-plus"):(close_accordion_section(),$(this).addClass("active"),e.target.children[1].firstElementChild.className="fa fa-minus",$(".accordion "+currentAttrValue).slideDown(300).addClass("open"));e.preventDefault()})}function close_accordion_section(){$(".accordion .accordion-section-title").removeClass("active");$(".accordion .accordion-section-content").slideUp(300).removeClass("open")}function fetchExamsByUnit(id){$scope.loader=!0;$scope.exams=[];$.ajax({method:"GET",url:"/api/exams/unit/"+id,success:function(res){if(res instanceof Array)if(res.length<1)info("You have no exams scheduled yet!");else for(var i=0;i<res.length;i++)$scope.$apply(function(){$scope.exams.push(res[i])})},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText)}});$scope.loader=!1}function fetchExamSession(id){$scope.loader=!0;$.ajax({method:"GET",url:"/api/exams/sessions/"+id,success:function(res){onFetchSessionSuccess(res)},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText)}});$scope.loader=!1}function fetchCourseWrkProgress(id){$scope.courseWrkLoader={};$scope.courseWrkLoader.IsActive=!0;$scope.courseWrkLoader.Text="loading coursework progress...";$.ajax({method:"GET",url:"/api/progress/unit/"+id+"/my",success:function(res){res.data.length>0?$scope.$apply(function(){$scope.courseworkprogress=res.data;$scope.courseWrkLoader.IsActive=!1;$scope.courseWrkLoader.Text=""}):$scope.$apply(function(){$scope.courseWrkLoader.IsActive=!1;info("This unit has not coursework materials uploaded.")})},error:function(res){$scope.courseWrkLoader.IsActive=!1;$scope.courseWrkLoader.Text="";res.responseText?parseError(res.responseText):error(res.statusText)}})}function onFetchSessionSuccess(data){$scope.$apply(function(){$scope.title="Exam Session, Id: "+data.sessionId.substring(0,6);$scope.session=data;$("#rootwizard").bootstrapWizard({onTabShow:function(tab,navigation,index){if(index>0){var $total=navigation.find("li").length-1,$current=index+1,$percent=$current/$total*100;$("#rootwizard .progress-bar").css({width:$percent+"%"})}}})});console.log(data)}$scope.title="";$scope.exams=[];$scope.questions=[];$scope.question={Answers:[]};$scope.calendarDate=function(date){return moment().to(date)};$scope.minutesToExam=function(date){var x=new moment(date),now=new moment,duration=moment.duration(x.diff(now)).as("minutes");return roundOff(duration,2)};$scope.onInitExamIndex=function(){$scope.title="Examinations";fetchExams()};$scope.onInitUnitExams=function(id){fetchExamsByUnit(id)};$scope.initExamSession=function(id){$scope.title="Session";fetchExamSession(id)};$scope.initCourseWrkProgress=function(id){fetchCourseWrkProgress(id)};$scope.onAddQuestion=function(){$scope.question={Answers:[]};$("#addQuestionModal").modal("show")};$scope.onAddAnswer=function(){$scope.question.Text?($scope.question.Answers.push($scope.answer),$scope.answer={}):error("Type a question first before adding answer options.")};$scope.onExitQuestion=function(){$scope.question={Answers:[]};$("#addQuestionModal").modal("hide")};$scope.onRemoveQuestion=function(que){var index=$scope.questions.indexOf(que);$scope.questions.splice(index)};$scope.onSubmitQuestion=function(){if($scope.question)if($scope.question.Answers.length<1)error("Your question has no answers. Please add answer options");else{var _marks=parseFloat($scope.question.Marks);$scope.question.Marks=_marks;$scope.questions.push($scope.question);$scope.question={Answers:[]}}else error("No question written.")};$scope.onSubmitExam=function(){if($scope.exam={},$scope.exam.Name=$scope.Name,$scope.exam.Date=moment($scope.examDate).format(),$scope.exam.Start=moment($scope.StartTime,"hh:mm a").format(),$scope.exam.End=moment($scope.EndTime,"hh:mm a").format(),$scope.exam.Questions=$scope.questions,!$scope.Name){warning("Specify exam title/name. e.g Supplementary exam, Final year exam e.t.c");return}if($scope.examDate===undefined){warning("Pick a date for this exam.");return}if($scope.StartTime===undefined||$scope.EndTime===undefined){warning("Pick start and end time for this exam.");return}if($scope.questions<1){warning("Exam has no questions. Add at-least one question to continue.");return}postExam()};$scope.onSelectExam=function(exam){$scope.selectedExam=exam;fetchExamDetails(exam.id);$("#examDetailsModal").modal("show")}}angular.module("gobel-app").controller("examCtrl",examCtrl);examCtrl.$inject=["$scope","$interval"]}(),function(){"use strict";function notificationsCtrl($scope){function activate(){}function fetchMyNotifications(){$scope.loader=!0;$.ajax({method:"GET",url:"/api/notifications",success:function(res){onFetchSuccess(res)},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText);$scope.loader=!1}})}function onFetchSuccess(data){data instanceof Array?$scope.$apply(function(){$scope.notifications=data;$scope.loader=!1}):console.log(data);setTimeout(function(){markAsRead()},1e4)}function markAsRead(){var unread=$scope.notifications.filter(x=>x.read===!1);unread.length>0&&$.ajax({method:"POST",url:"/api/notifications/markasread",type:"json",data:{notifications:unread},success:function(res){res instanceof Array&&$scope.$apply(function(){$scope.notifications=res})},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText)}})}function deleteNotification(ntf){$.ajax({method:"DELETE",url:"/api/notifications/"+ntf.id,success:function(res){yay(res);onDeleteSuccess(ntf)},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText)}})}function onDeleteSuccess(ntf){var index=$scope.notifications.indexOf(ntf);$scope.$apply(function(){$scope.notifications.splice(index,1)})}$scope.title="My Notifications";$scope.notifications=[];activate();$scope.initNotifications=function(){fetchMyNotifications()};$scope.normalizeDate=function(ntf){return moment().to(ntf.timestamp)};$scope.onDelete=function(ntf){deleteNotification(ntf)}}angular.module("gobel-app").controller("notificationsCtrl",notificationsCtrl);notificationsCtrl.$inject=["$scope"]}(),function(){"use strict";function sessionCtrl($scope,$interval){function activate(){$("footer ul li").on("click",function(e){var index=parseInt(e.target.innerText)-1;activateCurrent(index);$scope.$apply(function(){$scope.selectedQue=$scope.questions[index]})});$(".next").on("click",function(){var i=getCurrentIndex()+1;navigate(i)});$(".prev").on("click",function(){var i=getCurrentIndex()-1;navigate(i)})}function navigate(val){var total=$scope.questions.length;val<0||val>total-1||(activateCurrent(val),$scope.$apply(function(){$scope.selectedQue=$scope.questions[val]}))}function getCurrentIndex(){return $scope.questions.indexOf($scope.selectedQue)}function activateCurrent(current){$("footer ul li").each(function(e){e!==current?$(this).removeClass("active"):$(this).addClass("active")})}function fetchExamSession(id){$("#loadingModal").modal("show");setTimeout(function(){$.ajax({method:"GET",url:"/api/exams/sessions/"+id,success:function(res){console.log(res);onFetchSessionSuccess(res)},error:function(res){res.responseText?parseError(res.responseText):error(res.statusText)}});$("#loadingModal").modal("hide")},2e3)}function onFetchSessionSuccess(data){$scope.$apply(function(){$scope.session=data;$scope.targetTime=moment(data.exam.end);$scope.questions=data.exam.questions});$("footer ul").empty();for(var i=0;i<$scope.questions.length;i++)$("footer ul").append("<li>"+(i+1)+"<\/li>");$scope.questions.length>0&&(activateCurrent(0),$scope.$apply(function(){$scope.selectedQue=$scope.questions[0]}));$interval(onTimerTick,1e3);activate()}function onTimerTick(){var mt=moment($scope.targetTime).subtract(1,"seconds"),now=new moment,duration=moment.duration(mt.diff(now)),hrs,mins,secs;hrs=duration.get("hours");mins=duration.get("minutes");secs=duration.get("seconds");$(".remaining-time").text(hrs+":"+mins+":"+secs)}$scope.title="Exam Session Controller";$scope.session={};$scope.questions=[];$scope.selectedQue={};$scope.targetTime=null;$scope.initSession=function(id){fetchExamSession(id)};$scope.getIndex=function(que){return $scope.questions.indexOf(que)+5};$scope.onNext=function(){};$scope.onPrev=function(){navigate(getCurrentIndex()-1)}}angular.module("gobel-app").controller("sessionCtrl",sessionCtrl);sessionCtrl.$inject=["$scope","$interval"];
/*!
     * Mock implementation of Threading
    */
}();