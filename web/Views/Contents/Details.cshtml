@using DAL.Models
@using Services
@model Content
@{
    ViewBag.Title = Model.Title;
    ViewBag.Action = "Contents";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}
<style>
    #webplayer {
        max-width: 800px;
    }
    .plyr {
        border-radius: 4px;
        margin-bottom: 15px;
    }
</style>
<div class="padding">
    <div class="row">
        <div class="col-md-8">
            @{ 
                if(Model.Type == FormatType.Video)
                {
                     <div id="webplayer">
                         <video controls data-plyr='{"title": @Model.Title, "volume":3}'>
                             <!-- Video files -->
                             <source src="@Model.Url" type="video/mp4">

                             <!-- Fallback for browsers that don't support the <video> element -->
                             <a href="@Model.Url" download>Download</a>
                         </video>
                     </div>
                }
            }
            @{
                Html.RenderPartial("Contents/_Metadata", Model);
            }
        </div>
    </div>
</div>

<script>
    (function () {
        // This is the bare minimum JavaScript. You can opt to pass no arguments to setup.
        // e.g. just plyr.setup(); and leave it at that if you have no need for events
        var instances = plyr.setup({
            // Output to console
            debug: true
        });

        // Get an element
        function get(selector) {
            return document.querySelector(selector);
        }

        // Custom event handler (just for demo)
        function on(element, type, callback) {
            if (!(element instanceof HTMLElement)) {
                element = get(element);
            }
            element.addEventListener(type, callback, false);
        }

        // Loop through each instance
        instances.forEach(function (instance) {
            // Play
            on('.js-play', 'click', function () {
                instance.play();
            });

            // Pause
            on('.js-pause', 'click', function () {
                instance.pause();
            });

            // Stop
            on('.js-stop', 'click', function () {
                instance.stop();
            });

            // Rewind
            on('.js-rewind', 'click', function () {
                instance.rewind();
            });

            // Forward
            on('.js-forward', 'click', function () {
                instance.forward();
            });
        });
    })();
</script>
