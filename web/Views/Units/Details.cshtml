@using DAL.Models
@using DAL.Extensions
@using Services
@model Unit
@{
    ViewBag.Title = Model.Name;
    ViewBag.Action = "Units";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}
<style>
    h2 span {
        font-size: .65rem !important;
    }

    .list-item {
        padding: unset !important;
    }
    .class-hours {
        font-weight: 700;
        font-size: 1.4rem;
        opacity: .2;
        margin-right: -10px;
    }
    .content-box{
        padding-bottom:30px !important;
    }
    .file {
        background: #f9fcff !important;
    }
    .lec-exam-buttons{
        list-style-type:none;
        padding:0;
    }
    .lec-exam-buttons li{
        margin-bottom:5px;
    }
</style>

<div class="padding">
    <h2>
        <i class="fa fa-umbrella"></i> @Model.Name

        <span class="badge badge-primary" title="Likes">
            <i class="fa fa-thumbs-up" title="Likes"></i> @Model.Likes.Count
        </span>

        <span class="badge badge-info" title="Students Enrolled">
            <i class="fa fa-users" title="Students Enrolled"></i> @Model.UnitStudents.Count
        </span>

        @{
            if (User.Role() == "Lecturer" && User.ProfileId() == Model?.Lecturer?.Profile.Id)
            {
                if (Model.Class == null)
                {
                    <span class="pull-right h6">
                        <button class="btn btn-sm info theme-accent btn-block" type="button" data-target="#allocateUnitModal" data-toggle="modal" onclick="onAllocateUnit('@Model.Name', '@Model.Id')">
                            <i class="fa fa-fw fa-paperclip"></i>
                            <a class="hidden-folded d-inline">Get classroom</a>
                        </button>
                    </span>

                }
            }
            <span class="unit-course">
                @switch (Model.Course.Type)
                {
                    case CourseType.Certificate:
                        <i class="fa fa-certificate"></i>
                        break;
                    case CourseType.Diploma:
                        <i class="fa fa-certificate text-warning"></i>
                        break;
                    case CourseType.Degree:
                        <i class="fa fa-certificate text-success"></i>
                        break;
                    case CourseType.Masters:
                        <i class="fa fa-certificate text-info"></i>
                        break;
                    case CourseType.Phd:
                        <i class="fa fa-certificate text-danger"></i>
                        break;
                    default:
                        break;
                }
                @Model.Course.Name
            </span>
        }
    </h2>
    <br />
    <div class="row">
        <div class="col-md-3 col-sm-6">
            <div class="box p-3">
                @{
                    if (Model.Lecturer != null)
                    {
                        <div class="list-item">
                            <span class="w-40 avatar circle blue-grey">
                                <img alt="." src="@Url.Content(Model.Lecturer.Profile.PhotoUrl)">
                            </span>
                            <div class="list-body">
                                <a class="item-title _500" href="#">@Model.Lecturer.Profile.FullNames</a>
                                <div class="item-except text-sm text-muted h-1x">
                                    Lecturer
                                </div>
                                <div class="item-tag tag">
                                    <span class="item-date text-xs text-muted">@Model.Timestamp.ToString()</span>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <br />
                        <center class="text-muted">
                            <i class="fa fa-user-secret"></i> No Lecturer assigned yet!
                        </center>
                        <br />
                    }
                }
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="box p-3">
                @{
                    if (Model.Class != null)
                    {
                        <span><i>@Model.Class.DayOfWeek.ToString()</i></span>
                        <br />
                        <i class="fa fa-clock-o"></i> @Model.Class.StartTime.ToString("h:mm tt") <span> - </span> @Model.Class.EndTime.ToString("h:mm tt")
                        <br />
                        <span>
                            <span><i class="ion ion-location"></i> @Model.Class.Room</span>

                            <span class="pull-right text-muted class-hours">
                                @{
                                    if (Model.Class.Duration.Minutes > 0)
                                    {
                                        string n = ((Model.Class.Duration.Minutes / (decimal)60) * 100).ToString("N0").TrimEnd('0');

                                        <strong>@string.Format("{0}.{1}", Model.Class.Duration.Hours, n) HRS</strong>
                                    }
                                    else
                                    {
                                        <strong>@Model.Class.Duration.Hours HRS</strong>
                                    }
                                }

                            </span>
                        </span>
                    }
                    else
                    {
                        <br />
                        <center class="text-muted">
                            <i class="fa fa-building-o"></i> No ClassRoom
                        </center>
                        <br />
                    }
                }
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            @{ 
                if(User.Role() == "Lecturer" && User.ProfileId() == Model?.Lecturer?.Profile.Id)
                {
                    <ol class="lec-exam-buttons">
                        <li>
                            <a class="btn btn-info text-white" href="/exams/set-for/@Model.GenerateSlug()/@Model.Id">
                                <i class="fa fa-cube"></i> Prepare Exam
                            </a>
                        </li>
                        <li>
                            <a class="btn btn-default">
                                <i class="fa fa-cubes"></i> Past Exams
                            </a>
                        </li>
                    </ol>
                }
                else
                {
                    <a class="btn btn-info text-white" href="/units/@Model.Id/@Model.GenerateSlug()/exams">
                        <i class="fa fa-cubes"></i> Exams
                    </a>
                }
            }
        </div>
    </div>

    <h6>
        <i class="fa fa-list"></i> Uploaded Content

        @{
            if (User.Role() == "Lecturer" && User.ProfileId() == Model?.Lecturer?.Profile.Id)
            {
                <span class="pull-right h6">
                    <a class="btn btn-sm success theme-accent btn-block" href="/contents/add/@Model.Id/@Model.GenerateSlug()">
                        <i class="fa fa-fw fa-upload"></i>
                        <text class="hidden-folded d-inline">Upload</text>
                    </a>
                </span>
            }
        }
    </h6>
    <br />
    @{
        if (Model.Contents != null && Model.Contents.Count > 0)
        {
            <div class="row">
                @foreach (var item in Model.Contents)
                {
                    <div class="col col-lg-3 col-md-3 col-sm-4 col-xs-6">
                        <div class="box p-3 content-box file">
                            @switch (item.Type)
                            {
                                case FormatType.Audio:
                                    <i class="fa fa-file-audio-o"></i>
                                    break;
                                case FormatType.Video:
                                    <i class="fa fa-play-circle text-danger"></i>
                                    break;
                                case FormatType.Image:
                                    <i class="fa fa-image"></i>
                                    break;
                                case FormatType.Document:
                                    <i class="fa fa-file-text text-primary"></i>
                                    break;
                                case FormatType.Unknown:
                                    <i class="fa fa-file"></i>
                                    break;
                                default:
                                    break;
                            }
                            <a href="/contents/@item.Id/@Extensions.GenerateSlug(item.Title)"> @item.Title</a>
                            <br />
                            <span class="pull-right">
                                <i class="fa fa-thumbs-o-up"></i> @item.Likes.Count
                            </span>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <br />
            <center>
                <span><i class="fa fa-frown-o"></i> No materials uploaded yet for this unit.</span>
            </center>
        }
    }
</div>

@Html.Partial("Classes/_AllocateUnit")